{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/Modal.js","components/ImageGallery.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","onSubmit","useState","searchText","setSearchText","className","event","preventDefault","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","onClick","alt","Modal","onClose","bigUrl","useEffect","handlePress","code","window","addEventListener","removeEventListener","ReactDOM","createPortal","target","document","getElementById","ImageGallery","imgs","isModalOpen","setIsModalOpen","imgUrl","setImgUrl","map","item","previewURL","modalOpen","largeImageURL","id","propsTypes","PropsTypes","arrayOf","object","Button","api_key","axios","defaults","baseURL","App","isLoading","setIsLoading","setImgs","currentPageRef","useRef","lastSearchTextRef","length","current","scrollTo","top","documentElement","scrollHeight","behavior","params","queryString","stringify","key","q","pege","per_page","image_type","orientation","get","then","response","console","log","data","hits","color","height","width","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.7c86910d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Searchbar = (props) => {\r\n  const { onSubmit } = props\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const handleChange = (event) => {\r\n    setSearchText(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmite = (event) => {\r\n    event.preventDefault()\r\n    onSubmit(searchText)\r\n  }\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmite}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          value={searchText}\r\n          onChange={handleChange}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const ImageGalleryItem = (props) => {\r\n  const { src, onClick } = props\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img src={src} alt=\"все сломалось\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Modal = (props) => {\r\n  const { onClose, bigUrl } = props\r\n\r\n  useEffect(() => {\r\n    const handlePress = (event) => {\r\n      if (event.code === 'Escape') {\r\n        onClose()\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', handlePress)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handlePress)\r\n    }\r\n  }, [onClose])\r\n\r\n  const handleOverLayClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"Overlay\" onClick={handleOverLayClick}>\r\n      <div className=\"Modal\">\r\n        <img src={bigUrl} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    document.getElementById('ModalRoot'),\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  bigUrl: PropTypes.string,\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ImageGalleryItem } from './ImageGalleryItem'\r\nimport { Modal } from './Modal'\r\nimport PropsTypes from 'prop-types'\r\n\r\nexport const ImageGallery = (props) => {\r\n  const { imgs } = props\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n  const modalClose = () => setIsModalOpen(false)\r\n\r\n  const [imgUrl, setImgUrl] = useState('')\r\n\r\n  const modalOpen = (imgUrl) => {\r\n    setImgUrl(imgUrl)\r\n    setIsModalOpen(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {imgs.map((item) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={item.id}\r\n              src={item.previewURL}\r\n              onClick={() => modalOpen(item.largeImageURL)}\r\n            />\r\n          )\r\n        })}\r\n      </ul>\r\n      {isModalOpen ? <Modal onClose={modalClose} bigUrl={imgUrl} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nImageGallery.propsTypes = {\r\n  imgs: PropsTypes.arrayOf(PropsTypes.object),\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <button className=\"Button\" onClick={props.onClick}>\r\n      Load More\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\nimport Loader from 'react-loader-spinner'\nimport queryString from 'query-string'\nimport axios from 'axios'\n\nimport { Searchbar } from './components/Searchbar'\nimport { ImageGallery } from './components/ImageGallery'\nimport { Button } from './components/Button'\n\nimport './App.css'\n\nconst api_key = '24139872-fead068626907a7ba14cf06e1'\nconst base_URL = 'https://pixabay.com/api/'\n\naxios.defaults.baseURL = base_URL\n\nconst App = (props) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [imgs, setImgs] = useState([])\n\n  const currentPageRef = useRef(1)\n  const lastSearchTextRef = useRef('')\n\n  const fetchImg = (searchText) => {\n    setIsLoading(true)\n\n    currentPageRef.current = 1\n    lastSearchTextRef.current = searchText\n\n    const params = queryString.stringify({\n      key: api_key,\n      q: searchText,\n      pege: 1,\n      per_page: 12,\n      image_type: 'photo',\n      orientation: 'horizontal',\n    })\n\n    axios.get('?' + params).then((response) => {\n      console.log('response.data.imgs', response.data.hits)\n\n      setImgs(response.data.hits)\n      setIsLoading(false)\n    })\n  }\n\n  const loadMore = () => {\n    setIsLoading(true)\n\n    currentPageRef.current += 1\n\n    const params = queryString.stringify({\n      key: api_key,\n      q: lastSearchTextRef.current,\n      page: currentPageRef.current,\n      per_page: 12,\n      image_type: 'photo',\n      orientation: 'horizontal',\n    })\n\n    axios.get('?' + params).then((response) => {\n      setIsLoading(false)\n      setImgs((imgs) => [...imgs, ...response.data.hits])\n    })\n  }\n\n  useEffect(() => {\n    if (imgs.length !== 0 && currentPageRef.current !== 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n  }, [imgs])\n\n  return (\n    <div>\n      <Searchbar onSubmit={fetchImg} />\n      <ImageGallery imgs={imgs} />\n      <div className=\"Center\">\n        {isLoading ? (\n          <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={25} width={25} />\n        ) : null}\n        {imgs.length !== 0 && !isLoading ? <Button onClick={loadMore} /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}